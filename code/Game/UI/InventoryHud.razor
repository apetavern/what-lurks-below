@using System
@using BrickJam.Player
@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent

<root>
    @* Inventory Slots *@
    @for (var i = 0; i < 10; i++)
    {
        @for (var j = 0; j < 3; j++)
        {
            <div class="slot"></div>
        }
    }
    @* Constants *@
    <div class="inv-bottom">
        <div class="subslot">Health</div>
        <div class="subslot">Ammo</div>
    </div>
    @foreach (var item in Inventory.Get)
    {
        <InventoryGridItem Item=@item />
    }
</root>

@code
{
    public bool IsOpen { get; set; }
    
    public Inventory Inventory { get; set; }
    
    public static InventoryHud Instance { get; set; }

    public InventoryHud()
    {
        Instance = this;
    }

    public void SetInventory(Inventory inventory)
    {
        Inventory = inventory;
    }
    
    public override void Update()
    {
        base.Update();

        if (Input.Pressed("Inventory"))
        {
            IsOpen = !IsOpen;
        }
        
        Panel.SetClass("open", IsOpen);
    }

    protected override int BuildHash() => System.HashCode.Combine( Time.Now );
    // public bool IsOpen { get; set; }
    //
    // public int SlotsX { get; set; }
    // public int SlotsY { get; set; }
    //
    // public static InventoryHud Instance { get; set; }
    //
    // public InventoryHud()
    // {
    //     Instance = this;
    // }
    //
    // void ToggleOpen()
    // {
    //     IsOpen = !IsOpen;
    // }
    //
    // public void SetSlots(int x, int y)
    // {
    //     SlotsX = x;
    //     SlotsY = y;
    // }
    //
    // public override void Update()
    // {
    //     base.Update();
    //     
    //     if (Input.Pressed("Inventory"))
    //     {
    //         ToggleOpen();
    //     }
    //     
    //     Panel.SetClass("open", IsOpen);
    // }
    //
    // protected override int BuildHash()
    // {
    //     return HashCode.Combine(SlotsX, SlotsY);
    // }
}